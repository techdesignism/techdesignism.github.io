{"version":3,"sources":["assets/image/logo.png","components/logo.jsx","components/coder.jsx","components/result-alert.jsx","service/message/message.js","service/convert/css/decls.js","service/utils/num.js","service/convert/css/split-mapping.js","service/convert/css/avatar.js","service/convert/css/split-cssattr.js","service/convert/css/parse.js","service/convert/flutter/template.js","service/convert/flutter/code-arr.js","service/convert/flutter/transform/unit.js","service/utils/unit.js","service/convert/flutter/transform/color.js","service/convert/flutter/transform/border.js","service/convert/flutter/transform/boxshadow.js","service/utils/arr.js","service/convert/flutter/transform/transform.js","service/convert/flutter/transform/font-weight.js","service/convert/flutter/transform/font-family.js","service/utils/str.js","service/convert/flutter/transform/constraints.js","service/convert/flutter/transform/border-radius.js","service/utils/camel.js","service/convert/flutter/transform/axis-alignment.js","service/convert/flutter/transform/marginpadding.js","service/utils/pos.js","service/convert/flutter/transform/background-image.js","service/convert/flutter/transform.js","service/convert/flutter/widget.js","service/convert/flutter/filter.js","service/convert/flutter/parse.js","service/convert/converter.js","components/operating-area.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","React","createElement","className","alt","src","logo","width","require","Coder","Component","onChange","editor","data","value","this","props","render","CodeMirror","options","Object","assign","theme","tabSize","lineNumbers","bind","ResultAlert","message","config","duration","maxCount","first","showMessage","type","msg","success","error","Message","Decls","constructor","decls","add","_ref","key","val","valueList","push","isNull","length","forEach","func","decl","index","merge","remove","i","splice","getVal","defaultVal","clone","cloneDecls","isNone","trim","toNum","isNumber","r","exec","parseFloat","toNumber","toRadian","fl","arguments","undefined","radian","toString","replace","Math","PI","ppo","floor","toRound","n","d","pow","round","SPLIT_MAPPING","background","border-radius","text-decoration","border","padding","margin","font","splitByMainStyle","mainStyle","subStyles","allStyle","getAllStyle","css","$","removeClass","removeAttr","style","addValToDecls","getStyleVal","getAvatarStyle","splitCssAttr","parseCssDecls","root","Promise","resolve","reject","walkDecls","list","postcss","space","prop","setTimeout","PROP","PROP2","CLASS","CHILDREN","DECO","TAB","REAL_SPACE","CONTAINER","TEXT","CENTER","ROW","COLUMN","POSITIONED","TRANSFORM","OPACITY","CodeArr","arr","lines","code","getIndexOf","enabled","indexOf","getTabs","tabs","replaceTag","tag","newCode","cloneLines","nspace","join","split","line","toFunit","test","isNumerical","isPercentage","isPixel","isInteger","isEm","isRem","isPt","toFColor","color","hex","e","toFBorder","toColor","createBoxShadow","toArray","offset","rgbas","replaceRbga2Sign","str","replaceSign2Rgba","slice","toBoxShadow","shadows","shadowStr","findFromProp","name","formatVal","strArr","newVal","toFTransform","sign","RegExp","split2Arr","skew","scale","rotate","translate","matrixval","toFFontWeight","toFFontFamily","addQuotes","toConstraints","bcVal","maxWidth","minWidth","maxHeight","minHeight","toFBorderRadius","tl","tr","br","bl","toCamel","$0","$1","toUpperCase","toAxisAlignment","toFMarginPadding","top","right","bottom","left","createLineGradient","colors","steps","end","stepsVal","colorsVal","String","c1","c2","result","getEnd","createRadialGradient","angle","cos","sin","createBgImage","size","repeat","position","toNameVal","toDecorationImage","match","inSplitStyles","transfromToCamelKey","transform","mainStyleKey","camelKey","Widget","children","parent","id","uuid","template","codeString","prop2","decoration","codelines","addChild","child","addChildTo","loop","target","getRoot","getDepth","depth","setProp","okey","oval","setProp2","setDecoration","clearAllPseudoTags","clearBlankLines","codeArr","selfToCodeString","childToCodeString","childStr","propToCodeString","prop2ToCodeString","decorationToCodeString","TAG","WidgetManager","cache","get","isFlex","_ref3","parseFlutter","widget","widgetManager","isPositioned","_ref2","isOpacity","_ref4","alignItems","justifyContent","isCenter","_ref5","isRow","_ref6","isColumn","_ref7","isTransform","isText","isDecoration","dumpLogError","err","console","log","stack","convert2Flutter","async","ast","process","flutterStyle","inputString","p1","adjustColorCode","OperatingArea","super","cssOptions","mode","dartOptions","cssVal","dartVal","[object Object]","convertAndUpdateDartCoder","clearBtnClickHandler","updateCoder","codeChangeHadler","setState","Row","Col","span","Button","onClick","convertBtnClickHandler","Content","Layout","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8b08ffa8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5857ad01.png\";","import React from \"react\";\r\nimport logo from \"../assets/image/logo.png\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo\">\r\n      <div className=\"title\">\r\n        <img alt=\"\" src={logo} width={100} /> Convert css style to flutter style\r\n      </div>\r\n      <div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { UnControlled as CodeMirror } from \"react-codemirror2\";\r\n\r\nrequire(\"codemirror/lib/codemirror.css\");\r\nrequire(\"codemirror/theme/material.css\");\r\nrequire(\"codemirror/theme/monokai.css\");\r\nrequire(\"codemirror/theme/rubyblue.css\");\r\nrequire(\"codemirror/theme/cobalt.css\");\r\n\r\nrequire(\"codemirror/mode/css/css.js\");\r\nrequire(\"codemirror/mode/dart/dart.js\");\r\n\r\nclass Coder extends React.Component {\r\n  onChange(editor, data, value) {\r\n    this.props.onChange && this.props.onChange(value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CodeMirror\r\n        className=\"code-mirror\"\r\n        value={this.props.value || \"\"}\r\n        options={Object.assign(\r\n          {\r\n            theme: \"cobalt\",\r\n            tabSize: 2,\r\n            lineNumbers: true\r\n          },\r\n          this.props.options\r\n        )}\r\n        onChange={this.onChange.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Coder;\r\n","import React from \"react\";\r\nimport { Alert } from \"antd\";\r\n\r\nclass ResultAlert extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {false ? (\r\n          <Alert message=\"Alert Message Text\" type=\"success\" banner />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultAlert;\r\n","import { message } from \"antd\";\r\n\r\nmessage.config({\r\n  duration: 1,\r\n  maxCount: 3\r\n});\r\n\r\nlet first = true;\r\nconst showMessage = (type, msg) => {\r\n  if (first) {\r\n    first = false;\r\n    return;\r\n  }\r\n\r\n  if (type === \"success\") message.success(msg);\r\n  else message.error(msg);\r\n};\r\n\r\nconst Message = {\r\n  success(msg) {\r\n    showMessage(\"success\", msg);\r\n  },\r\n  error(msg) {\r\n    showMessage(\"error\", msg);\r\n  }\r\n};\r\n\r\nexport default Message;\r\n","import clone from \"lodash/clone\";\r\n\r\nclass Decls {\r\n  constructor() {\r\n    this.decls = [];\r\n  }\r\n\r\n  add({ key, val, valueList = null, data = null }) {\r\n    this.decls.push({ data, valueList, key, val });\r\n  }\r\n\r\n  isNull() {\r\n    return this.decls.length === 0;\r\n  }\r\n\r\n  forEach(func) {\r\n    this.decls.forEach((decl, index) => func(decl, index));\r\n  }\r\n\r\n  merge(decls) {\r\n    for (let key in decls) {\r\n      this.add({\r\n        key,\r\n        val: decls[key]\r\n      });\r\n    }\r\n  }\r\n\r\n  remove(key) {\r\n    for (let i = this.decls.length - 1; i >= 0; i--) {\r\n      if (this.decls[i][\"key\"] === key) {\r\n        this.decls.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  getVal(key, defaultVal) {\r\n    let val = null;\r\n    this.decls.forEach(decl => {\r\n      if (decl.key === key) val = decl.val;\r\n    });\r\n\r\n    return val || defaultVal;\r\n  }\r\n\r\n  clone() {\r\n    const cloneDecls = new Decls();\r\n    cloneDecls.decls = clone(this.decls);\r\n\r\n    return cloneDecls;\r\n  }\r\n}\r\n\r\nexport default Decls;\r\n","import ppo from \"ppo\";\r\nimport toNumber from \"lodash/toNumber\";\r\nimport isNumber from \"lodash/isNumber\";\r\n\r\nconst isMulti = key => {\r\n  if (key.indexOf(\"|\") > 0) return true;\r\n  else return false;\r\n};\r\n\r\nconst findSimilarNumber = (n, rule) => {\r\n  if (rule[n + \"\"]) return n;\r\n\r\n  const nums = [];\r\n  for (let key in rule) {\r\n    nums.push(parseInt(key));\r\n  }\r\n  nums.sort((n1, n2) => n2 - n1);\r\n\r\n  for (let i = 0; i < nums.length; i++) {\r\n    const num = nums[i];\r\n    if (n > num) return num;\r\n  }\r\n\r\n  return 0;\r\n};\r\n\r\nconst isNone = val => {\r\n  if (!val) return true;\r\n\r\n  if (typeof val === \"string\") {\r\n    if (val.trim() === \"\") return true;\r\n    if (val === \"null\") return true;\r\n    if (val === \"none\") return true;\r\n    if (val === \"inhert\") return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst toNum = val => {\r\n  if (isNumber(val)) return val;\r\n\r\n  const r = /([-0-9.]+)[a-zA-Z%]/gi.exec(`${val}c`);\r\n  if (r && r.length >= 2) {\r\n    val = r[1];\r\n    val = isNumber(val) ? val : parseFloat(val);\r\n    return val;\r\n  } else {\r\n    return toNumber(val);\r\n  }\r\n};\r\n\r\nconst toRadian = (val, fl = 3) => {\r\n  let radian = val.toString().replace(/deg$/g, \"\");\r\n  radian = (radian * Math.PI) / 180;\r\n  return ppo.floor(radian, fl);\r\n};\r\n\r\nconst toRound = (val, n = 3) => {\r\n  const d = Math.pow(10, n);\r\n  const num = Math.round(val * d);\r\n  return num / d;\r\n};\r\n\r\nexport { isMulti, isNone, toNum, findSimilarNumber, toRadian, toRound };\r\n","const SPLIT_MAPPING = {\r\n  background: [\r\n    \"background-color\",\r\n    \"background-image\",\r\n    \"background-position\",\r\n    \"background-size\",\r\n    \"background-repeat\"\r\n  ],\r\n\r\n  \"border-radius\": [\r\n    \"border-top-left-radius\",\r\n    \"border-top-right-radius\",\r\n    \"border-bottom-right-radius\",\r\n    \"border-bottom-left-radius\"\r\n  ],\r\n\r\n  \"text-decoration\": [\r\n    \"text-decoration-line\",\r\n    \"text-decoration-style\",\r\n    \"text-decoration-color\"\r\n  ],\r\n\r\n  border: [\"border-width\", \"border-style\", \"border-color\"],\r\n\r\n  padding: [\"padding-top\", \"padding-right\", \"padding-bottom\", \"padding-left\"],\r\n\r\n  margin: [\"margin-top\", \"margin-right\", \"margin-bottom\", \"margin-left\"],\r\n\r\n  font: [\r\n    \"font-style\",\r\n    \"font-weight\",\r\n    \"font-size\",\r\n    \"font-family\"\r\n  ]\r\n};\r\n\r\nexport default SPLIT_MAPPING;\r\n","import $ from \"jquery\";\r\n\r\nconst setAvatarStyle = css => {\r\n  $(\"#avator\")\r\n    .removeClass()\r\n    .removeAttr(\"style\")\r\n    .css(css);\r\n};\r\n\r\nconst getAvatarStyle = key => {\r\n  return $(\"#avator\").css(key);\r\n};\r\n\r\nexport { getAvatarStyle, setAvatarStyle };\r\n","////////////////////////////////////////////////////////////////\r\n//\r\n//  Jquery is used here because it is a nice style parser.\r\n//\r\n////////////////////////////////////////////////////////////////\r\n\r\nimport { isNone } from \"../../utils/num\";\r\nimport SPLIT_MAPPING from \"./split-mapping\";\r\nimport { getAvatarStyle, setAvatarStyle } from \"./avatar\";\r\n\r\nconst splitCssAttr = decls => {\r\n  if (!decls) return null;\r\n\r\n  let cloneDecls = decls.clone();\r\n  for (let mainStyle in SPLIT_MAPPING) {\r\n    cloneDecls = splitByMainStyle(cloneDecls, mainStyle, SPLIT_MAPPING[mainStyle]);\r\n  }\r\n\r\n  return cloneDecls;\r\n};\r\n\r\nconst splitByMainStyle = (decls, mainStyle, subStyles = []) => {\r\n  const val = decls.getVal(mainStyle);\r\n  if (val) {\r\n    const allStyle = getAllStyle(decls);\r\n    setAvatarStyle(allStyle);\r\n    subStyles.forEach(style => addValToDecls(decls, style));\r\n    decls.remove(mainStyle);\r\n  }\r\n\r\n  return decls;\r\n};\r\n\r\nconst addValToDecls = (decls, key) => {\r\n  const val = getStyleVal(decls, key);\r\n  if (!isNone(val)) decls.add({ key, val });\r\n};\r\n\r\nconst getStyleVal = (decls, key) => {\r\n  let val = getAvatarStyle(key);\r\n  if (isNone(val)) val = decls.getVal(key);\r\n  return val;\r\n};\r\n\r\nconst getAllStyle = decls => {\r\n  const style = {};\r\n  decls.forEach(decl => {\r\n    const key = decl[\"key\"];\r\n    const val = decl[\"val\"];\r\n    style[key] = val;\r\n  });\r\n  return style;\r\n};\r\n\r\nexport default splitCssAttr;\r\n","import postcss from \"postcss\";\r\nimport Decls from \"./decls\";\r\nimport splitCssAttr from \"./split-cssattr\";\r\n\r\nconst parseCssDecls = root => {\r\n  if (!root) return null;\r\n\r\n  return new Promise(function (resolve, reject) {\r\n    const decls = new Decls();\r\n\r\n    root.walkDecls(decl => {\r\n      const list = postcss.list.space(decl.value);\r\n\r\n      decls.add({\r\n        key: decl.prop,\r\n        val: decl.value,\r\n        data: decl,\r\n        valueList: list\r\n      });\r\n    });\r\n\r\n\r\n    setTimeout((decls) => {\r\n      decls = splitCssAttr(decls);\r\n      resolve(decls)\r\n    }, 80, decls);\r\n  });\r\n};\r\n\r\nexport default parseCssDecls;\r\n","const PROP = \"<-prop->\";\r\nconst PROP2 = \"<-prop2->\";\r\nconst CLASS = \"<-class->\";\r\nconst CHILDREN = \"<-children->\";\r\nconst DECO = \"<-decoration->\";\r\nconst TAB = \"<-tab->\";\r\nconst REAL_SPACE = \"  \";\r\n\r\nconst CONTAINER = `\r\n Container(\r\n  ${CHILDREN}\r\n  ${PROP}\r\n  ${DECO}\r\n),\r\n`.trim();\r\n\r\nconst TEXT = `\r\n Text(\r\n  \"Hello World\",\r\n  style: TextStyle(\r\n    ${PROP}\r\n  ),\r\n  ${PROP2}\r\n),\r\n`.trim();\r\n\r\nconst CENTER = `\r\n Center(\r\n  ${CHILDREN}\r\n),\r\n`.trim();\r\n\r\nconst ROW = `\r\n ROW(\r\n  ${CHILDREN}\r\n  ${PROP}\r\n),\r\n`.trim();\r\n\r\nconst COLUMN = `\r\n COLUMN(\r\n  ${CHILDREN}\r\n  ${PROP}\r\n),\r\n`.trim();\r\n\r\nconst POSITIONED = `\r\n Positioned(\r\n  ${CHILDREN}\r\n  ${PROP}\r\n),`;\r\n\r\nconst TRANSFORM = `\r\n Transform(\r\n  ${CHILDREN}\r\n  ${PROP}\r\n),`;\r\n\r\nconst OPACITY = `\r\n Opacity(\r\n  ${CHILDREN}\r\n  ${PROP}\r\n),`;\r\n\r\nexport {\r\n  CONTAINER,\r\n  TEXT,\r\n  CHILDREN,\r\n  DECO,\r\n  CLASS,\r\n  PROP,\r\n  PROP2,\r\n  CENTER,\r\n  TAB,\r\n  ROW,\r\n  COLUMN,\r\n  POSITIONED,\r\n  TRANSFORM,\r\n  OPACITY,\r\n  REAL_SPACE\r\n};\r\n","/////////////////////////////////////////////////////////\r\n//\r\n//\tCodeArr\r\n//\t[\r\n//   \"new Container(\" ,\r\n//\t \"  child: new Text(\" ,\r\n//\t \"    \"Hello World\",\"\r\n//  ]\r\n//\r\n/////////////////////////////////////////////////////////\r\nimport { TAB } from \"./template\";\r\nimport clone from \"lodash/clone\";\r\n\r\nclass CodeArr {\r\n  constructor(arr) {\r\n    this.lines = arr || [];\r\n  }\r\n\r\n  add(key, code) {\r\n    const index = this.getIndexOf(key);\r\n    if (index > -1) {\r\n      this.lines[index] = code;\r\n    } else {\r\n      this.lines.push(code);\r\n    }\r\n    this.enabled = true;\r\n  }\r\n\r\n  isNull() {\r\n    return this.lines.length === 0;\r\n  }\r\n\r\n  getIndexOf(key) {\r\n    for (let i = 0; i < this.lines.length; i++) {\r\n      if (this.lines[i].indexOf(`${key}:`) > -1) return i;\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  getTabs(n) {\r\n    let tabs = \"\";\r\n    for (let i = 0; i < n; i++) tabs += TAB;\r\n    return tabs;\r\n  }\r\n\r\n  replaceTag(tag, newCode) {\r\n    const cloneLines = clone(this.lines);\r\n\r\n    for (let i = 0; i < this.lines.length; i++) {\r\n      const code = this.lines[i];\r\n      if (code.indexOf(tag) > -1) {\r\n        cloneLines.splice(i, 0, newCode);\r\n      }\r\n    }\r\n    this.lines = cloneLines;\r\n  }\r\n\r\n  toString(nspace = 0) {\r\n    if (nspace === 0) {\r\n      return this.lines.join(\"\\n\");\r\n    } else {\r\n      const tabs = this.getTabs(nspace);\r\n      const str = this.lines.join(\"\\n\");\r\n      const arr = str.split(/\\n/g);\r\n      arr.forEach((line, index) => (arr[index] = tabs + line));\r\n\r\n      return arr.join(\"\\n\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default CodeArr;\r\n","import isNumber from \"lodash/isNumber\";\r\nimport isInteger from \"lodash/isInteger\";\r\nimport { toNum } from \"../../../utils/num\";\r\nimport { isNumerical, isPercentage, isPixel, isEm, isRem, isPt } from \"../../../utils/unit\";\r\n\r\nconst toFunit = val => {\r\n  if (isNumber(val)) return val;\r\n\r\n  val += \"\";\r\n\r\n  // like \"250\"\r\n  if (isNumerical(val)) {\r\n    return toNum(val);\r\n  }\r\n\r\n  // like 50%\r\n  else if (isPercentage(val)) {\r\n    val = toNum(val) / 100;\r\n    return `_parent_ * ${val} // percentage of parent width. like 'MediaQuery.of(context).size.width * 0.2'`;\r\n  }\r\n\r\n  // like 120px\r\n  else if (isPixel(val)) {\r\n    val = toNum(val);\r\n    val = isInteger(val) ? `${val}.0` : `${val}`;\r\n    return val;\r\n  }\r\n\r\n  // like 3.2em\r\n  else if (isEm(val)) {\r\n    val = toNum(val);\r\n    return `_parent_font_width_ * ${val} // https://www.w3.org/Style/Examples/007/units`;\r\n  }\r\n\r\n  // like 10rem\r\n  else if (isRem(val)) {\r\n    val = toNum(val);\r\n    return `_root_font_width_ * ${val} // https://www.w3.org/Style/Examples/007/units`;\r\n  }\r\n\r\n  // like 12pt\r\n  else if (isPt(val)) {\r\n    val = toNum(val);\r\n    return `${val} * 72 / _dpi_ // pt = px * dpi / 72`;\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\nexport default toFunit;\r\n","const isNumerical = val => /^([0-9]+)$/gi.test(val.toString());\r\n\r\nconst isPercentage = val => /([0-9]+)%$/gi.test(val);\r\n\r\nconst isPixel = val => /([0-9]+)(px|dpx)$/gi.test(val);\r\n\r\nconst isEm = val => /([0-9]+)em$/gi.test(val);\r\n\r\nconst isRem = val => /([0-9]+)rem$/gi.test(val);\r\n\r\nconst isPt = val => /([0-9]+)pt$/gi.test(val);\r\n\r\nexport { isNumerical, isPercentage, isPixel, isPt, isEm, isRem };\r\n","import color from \"color\";\r\n\r\nconst toFColor = val => {\r\n  try {\r\n    val = typeof val === \"string\" ? val.trim() : val;\r\n    const c16 = color(val)\r\n      .hex()\r\n      .replace(/^#/, \"0x\");\r\n\r\n    return `Color(${c16}00)`;\r\n  } catch (e) {\r\n    const c16 = (val + \"\").replace(/^#/, \"0x\");\r\n    return `Color(${c16}00)`;\r\n  }\r\n};\r\n\r\nexport default toFColor;\r\n","import toFunit from \"./unit\";\r\nimport toColor from \"./color\";\r\n\r\nconst toFBorder = (val, decls) => {\r\n  let width = decls.getVal(\"border-width\", \"1px\");\r\n  let color = decls.getVal(\"border-color\", \"blue\");\r\n  let style = decls.getVal(\"border-style\", \"solid\");\r\n\r\n  width = toFunit(width);\r\n  color = toColor(color);\r\n\r\n  return `\r\nBorder.all(\r\n  color: ${color},\r\n  width: ${width},\r\n  style: BorderStyle.${style}\r\n)`.trim();\r\n};\r\n\r\nexport default toFBorder;\r\n","import trim from \"lodash/trim\";\r\nimport toFunit from \"./unit\";\r\nimport toColor from \"./color\";\r\n\r\n// 0 2px 4px rgba(0, 0, 0, 0.8);\r\nconst toBoxShadow = val => {\r\n  let shadows = \"\";\r\n  val = replaceRbga2Sign(val);\r\n  const arr = val.split(\",\");\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const shadowStr = replaceSign2Rgba(trim(arr[i]));\r\n    const shadow = createBoxShadow(shadowStr);\r\n    shadows += \"\\n\" + shadow;\r\n  }\r\n\r\n  return `\r\n<BoxShadow>[\r\n${shadows}\r\n]`.trim();\r\n};\r\n\r\nconst createBoxShadow = val => {\r\n  val = toArray(val);\r\n  const x = toFunit(val[0]);\r\n  const y = toFunit(val[1]);\r\n  const offset = `Offset(${x}, ${y})`;\r\n  const color = toColor(val[3] || \"#000000\");\r\n  const blurRadius = toFunit(val[2] || 10);\r\n\r\n  return `\r\n  BoxShadow (\r\n    color: ${color},\r\n    offset: ${offset},\r\n    blurRadius: ${blurRadius},\r\n  ),`;\r\n};\r\n\r\n/// replaceRbga2Sign and replaceSign2Rgba\r\nlet i = 0;\r\nconst rgbas = {};\r\nconst replaceRbga2Sign = str => {\r\n  return str.replace(/rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)/gi, val => {\r\n    const key = `__${i++}__`;\r\n    rgbas[key] = val;\r\n    return key;\r\n  });\r\n};\r\n\r\nconst replaceSign2Rgba = str => {\r\n  for (let key in rgbas) {\r\n    str = str.replace(key, rgbas[key]);\r\n  }\r\n  return str;\r\n};\r\n\r\nconst toArray = val => {\r\n  let arr = val.trim().split(\" \");\r\n  if (arr.length > 4) {\r\n    let str = \"\";\r\n    for (let i = 3; i < arr.length; i++) {\r\n      str += arr[i];\r\n    }\r\n\r\n    arr = arr.slice(0, 4);\r\n    arr[3] = str;\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nexport default toBoxShadow;\r\n","const split2Arr = (val, sign = \")\") => {\r\n  const arr = val.split(`${sign} `);\r\n  for (let i = 0; i < arr.length; i++) {\r\n    const str = arr[i];\r\n    const reg = new RegExp(`\\\\${sign}$`, \"gi\");\r\n    if (!reg.test(str)) arr[i] = str + sign;\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport { split2Arr };\r\n","import trim from \"lodash/trim\";\r\nimport { split2Arr } from \"../../../utils/arr\";\r\nimport { toNum, toRadian } from \"../../../utils/num\";\r\n\r\n// skewX(25deg) rotate3d(180deg,0,1) scale3d(2,2,1) translate3d(10px,10px,0px);\r\nconst toFTransform = val => {\r\n  val = trim(val);\r\n  if (/^matrix/gi.test(val)) {\r\n    return val.replace(\"matrix\", \"Matrix4\");\r\n  } else {\r\n    const arr = split2Arr(val);\r\n\r\n    let skew = findFromProp(\"skew\", arr);\r\n    let scale = findFromProp(\"scale\", arr);\r\n    let rotate = findFromProp(\"rotate\", arr);\r\n    let translate = findFromProp(\"translate\", arr);\r\n\r\n    let matrixval = \"\";\r\n    skew = formatVal(\"skew\", skew);\r\n    scale = formatVal(\"scale\", scale);\r\n    rotate = formatVal(\"rotate\", rotate);\r\n    translate = formatVal(\"translate\", translate);\r\n\r\n    if (skew) matrixval += `${skew}..`;\r\n    if (scale) matrixval += `${scale}..`;\r\n    if (rotate) matrixval += `${rotate}..`;\r\n    if (translate) matrixval += `${translate}..`;\r\n    matrixval = matrixval.replace(/\\.\\.$/g, \"\");\r\n\r\n    return `Matrix4.${matrixval}`;\r\n  }\r\n};\r\n\r\nconst findFromProp = (name, arr) => {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (arr[i].indexOf(name) > -1) {\r\n      return arr[i];\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nconst formatVal = (key, val) => {\r\n  if (!val) return null;\r\n\r\n  const r = /[a-zA-Z]+\\((.*)\\)/.exec(val);\r\n  if (r && r.length >= 2) {\r\n    let str = r[1];\r\n    let strArr = str.split(\",\");\r\n    let arr = [];\r\n\r\n    if (key === \"rotate\") {\r\n      const radian = toRadian(str);\r\n      val = val.replace(str, radian);\r\n    } else {\r\n      strArr.forEach(n => {\r\n        n = toNum(n);\r\n        arr.push(n);\r\n      });\r\n      const newVal = arr.join(\",\");\r\n      val = val.replace(\"3d\", \"\").replace(str, newVal);\r\n    }\r\n  }\r\n\r\n  return val;\r\n};\r\n\r\nexport default toFTransform;\r\n","//import toNumber from \"lodash/toNumber\";\r\n\r\nconst toFFontWeight = val => {\r\n  if (val === \"bold\" || val === \"normal\") {\r\n    return `FontWeight.${val}`;\r\n  } else if (/^[1-9]00/.test(val + \"\")) {\r\n    return `FontWeight.w${val}`;\r\n  } else {\r\n    return `FontWeight.normal`;\r\n  }\r\n};\r\n\r\nexport default toFFontWeight;\r\n","import { addQuotes } from \"../../../utils/str\";\r\n\r\nconst toFFontFamily = val => {\r\n  if (/^(\"|')/gi.test(val) && !/(\"|')$/gi.test(val)) {\r\n    val = val.replace(/'/g, '\"');\r\n    val = val.split('\"')[1];\r\n  }\r\n\r\n  return addQuotes(val);\r\n};\r\n\r\nexport default toFFontFamily;\r\n","const addQuotes = str => {\r\n  if (!/^(\"|')/gi.test(str)) {\r\n    str = `\"${str}\"`;\r\n  }\r\n  return str;\r\n};\r\n\r\nconst getLast = str => {\r\n  return str.charAt(str.length - 1);\r\n};\r\n\r\nexport { addQuotes, getLast };\r\n","import toFunit from \"./unit\";\r\n\r\nconst toConstraints = (val, decls) => {\r\n  let bcVal = \"\";\r\n  let maxWidth = decls.getVal(\"max-width\");\r\n  let minWidth = decls.getVal(\"min-width\");\r\n  let maxHeight = decls.getVal(\"max-height\");\r\n  let minHeight = decls.getVal(\"min-height\");\r\n\r\n  if (maxWidth) {\r\n    bcVal += `maxWidth: ${toFunit(maxWidth)}`;\r\n  }\r\n\r\n  if (minWidth) {\r\n    bcVal += `, minWidth: ${toFunit(minWidth)}`;\r\n  }\r\n\r\n  if (maxHeight) {\r\n    bcVal += `, maxHeight: ${toFunit(maxHeight)}`;\r\n  }\r\n\r\n  if (minHeight) {\r\n    bcVal += `, minHeight: ${toFunit(minHeight)}`;\r\n  }\r\n\r\n  bcVal = bcVal.replace(/^,/g, \"\");\r\n  return `BoxConstraints(${bcVal})`;\r\n};\r\n\r\nexport default toConstraints;\r\n","import toFunit from \"./unit\";\r\n\r\nconst toFBorderRadius = (val, decls) => {\r\n  let tl = decls.getVal(\"border-top-left-radius\", 0);\r\n  let tr = decls.getVal(\"border-top-right-radius\", 0);\r\n  let br = decls.getVal(\"border-bottom-right-radius\", 0);\r\n  let bl = decls.getVal(\"border-bottom-left-radius\", 0);\r\n\r\n  if (tl === tr && tr === br && br === bl) {\r\n    if (tl === \"50%\") {\r\n      return `BoxShape.circle`;\r\n    } else {\r\n      return `BorderRadius.all(const Radius.circular(${toFunit(tl)}))`;\r\n    }\r\n  } else {\r\n    let tl = toFunit(val[0]);\r\n    let tr = toFunit(val[1]);\r\n    let br = toFunit(val[2]);\r\n    let bl = toFunit(val[3]);\r\n\r\n    tl = `topLeft: Radius.circular(${tl})`;\r\n    tr = `topRight: Radius.circular(${tr})`;\r\n    br = `bottomRight: Radius.circular(${br})`;\r\n    bl = `bottomLeft: Radius.circular(${bl})`;\r\n\r\n    return `BorderRadius.only(${tl}, ${tr}, ${br}, ${bl})`;\r\n  }\r\n};\r\n\r\nexport default toFBorderRadius;\r\n","const toCamel = val => {\r\n  let re = /-(\\w)/g;\r\n  return val.replace(re, function ($0, $1) {\r\n    return $1.toUpperCase();\r\n  });\r\n};\r\n\r\nexport default toCamel;\r\n","import toCamel from \"../../../utils/camel\";\r\n\r\nconst toAxisAlignment = val => {\r\n  val = val.replace(/flex-/, \"\");\r\n  return `${toCamel(val)}`;\r\n};\r\n\r\nexport default toAxisAlignment;\r\n","import toFunit from \"./unit\";\r\n\r\nconst toFMarginPadding = (key, val, decls) => {\r\n  let top = decls.getVal(`${key}-top`, 0);\r\n  let right = decls.getVal(`${key}-right`, 0);\r\n  let bottom = decls.getVal(`${key}-bottom`, 0);\r\n  let left = decls.getVal(`${key}-left`, 0);\r\n\r\n  if (top === right && right === bottom && bottom === left) {\r\n    top = toFunit(top);\r\n\r\n    return `const EdgeInsets.all(${top})`;\r\n  } else {\r\n    top = toFunit(top);\r\n    right = toFunit(right);\r\n    bottom = toFunit(bottom);\r\n    left = toFunit(left);\r\n\r\n    return `const EdgeInsets.only(top: ${top}, right: ${right}, bottom: ${bottom}, left: ${left})`;\r\n  }\r\n};\r\n\r\nexport default toFMarginPadding;\r\n","import toCamel from \"./camel\";\r\n\r\nconst isPercentage = val => {\r\n  if (val.indexOf(\"%\") > 0) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst isName = val => {\r\n  const keynames = \"left|center|bottom|top|right\".split(\"|\");\r\n  for (let i = 0; i < keynames.length; i++) {\r\n    if (val.indexOf(keynames[i]) === 0) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// 0% 50% -> leftCenter\r\n// center left -> centerLeft\r\nconst toNameVal = val => {\r\n  let result = \"\";\r\n  if (isPercentage(val)) {\r\n    const arr = val.split(\" \");\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (i === 0) {\r\n        if (arr[i] === \"0%\") {\r\n          result += \"top\";\r\n        } else if (arr[i] === \"50%\") {\r\n          result += \"center\";\r\n        } else {\r\n          result += \"bottom\";\r\n        }\r\n      } else {\r\n        if (arr[i] === \"0%\") {\r\n          result += \"-left\";\r\n        } else if (arr[i] === \"50%\") {\r\n          result += \"-center\";\r\n        } else {\r\n          result += \"-right\";\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    result.replace(/\\s/gi, \"-\");\r\n  }\r\n\r\n  result = toCamel(result);\r\n  result = result === \"centerCenter\" ? \"center\" : result;\r\n  return result;\r\n};\r\n\r\nexport { isPercentage, isName, toNameVal };\r\n","import toColor from \"./color\";\r\nimport toCamel from \"../../../utils/camel\";\r\nimport { toNameVal } from \"../../../utils/pos\";\r\nimport { toRound, toRadian, toNum } from \"../../../utils/num\";\r\n\r\nconst toDecorationImage = (val, decls) => {\r\n  val = String(val);\r\n\r\n  /// background-image = linear-gradient\r\n  if (/^linear-gradient/gi.test(val)) {\r\n    return createLineGradient(val, decls);\r\n  }\r\n\r\n  if (/^radial-gradient/gi.test(val)) {\r\n    return createRadialGradient(val, decls);\r\n  }\r\n\r\n  /// background-image - a.jpg\r\n  else {\r\n    return createBgImage(val, decls);\r\n  }\r\n};\r\n\r\nconst createLineGradient = (val, decls) => {\r\n  const colors = [];\r\n  const steps = [];\r\n  let end;\r\n  const arr = val\r\n    .replace(/^[a-zA-Z]+-gradient/gi, \"\")\r\n    .replace(\"(\", \"\")\r\n    .replace(\")\", \"\")\r\n    .split(\",\");\r\n\r\n  if (arr.length > 2) {\r\n    const d = arr[0];\r\n    end = d.replace(\"to\", \"\").trim();\r\n    let stepsVal, colorsVal;\r\n\r\n    for (let i = 1; i < arr.length; i++) {\r\n      const color = String(arr[i]).trim();\r\n      if (/\\d{0,2}%$/gi.test(color)) {\r\n        colorsVal = color.split(\" \")[0];\r\n        stepsVal = toNum(color.split(\" \")[1]) / 100;\r\n        steps.push(stepsVal);\r\n      } else {\r\n        colorsVal = color;\r\n      }\r\n\r\n      colors.push(toColor(colorsVal));\r\n    }\r\n  } else {\r\n    end = \"bottom\";\r\n    const c1 = arr[0];\r\n    const c2 = arr[1] || arr[0];\r\n    colors.push(toColor(c1));\r\n    colors.push(toColor(c2));\r\n  }\r\n\r\n  let result = `\r\nLinearGradient(\r\n  begin: Alignment(0.0, 0.0),\r\n  end: ${getEnd(end)},\r\n  colors: [${colors}],\r\n)`.trim();\r\n\r\n  if (steps.length) {\r\n    result = result.replace(\r\n      /\\)$/gi,\r\n      `\r\n  steps: [${steps}]\r\n)`\r\n    );\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst createRadialGradient = (val, decls) => {\r\n  const colors = [];\r\n  const arr = val\r\n    .replace(/^[a-zA-Z]+-gradient/gi, \"\")\r\n    .replace(\"(\", \"\")\r\n    .replace(\")\", \"\")\r\n    .split(\",\");\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (/^(circle|farthest|closest|ellipse)/.test(arr[i])) continue;\r\n    colors.push(toColor(arr[i]));\r\n  }\r\n\r\n  return `\r\nRadialGradient(\r\n  colors: [${colors}]\r\n)`.trim();\r\n};\r\n\r\nconst getEnd = (end) => {\r\n  let angle;\r\n  let n = 20;\r\n  if (end === \"right\") {\r\n    angle = toRadian(90, n);\r\n  } else if (end === \"top\") {\r\n    angle = toRadian(0, n);\r\n  } else if (end === \"left\") {\r\n    angle = toRadian(-90, n);\r\n  } else if (end === \"bottom\") {\r\n    angle = toRadian(180, n);\r\n  } else {\r\n    angle = toRadian(end, n);\r\n  }\r\n\r\n  angle -= Math.PI / 2;\r\n  const x = toRound(Math.cos(angle));\r\n  const y = toRound(Math.sin(angle));\r\n  return `Alignment(${x}, ${y})`;\r\n};\r\n\r\nconst createBgImage = (val, decls) => {\r\n  val = val.replace(/^url\\(/g, \"\").replace(/\\)$/g, \"\");\r\n  if (!/^('|\")/.test(val)) val = `\"${val}\"`;\r\n\r\n  const size = decls.getVal(\"background-size\", \"cover\");\r\n  let repeat = decls.getVal(\"background-repeat\", \"no-repeat\");\r\n  repeat = toCamel(repeat);\r\n  let position = decls.getVal(\"background-position\", \"center\");\r\n  position = toNameVal(position);\r\n\r\n  return `\r\nDecorationImage(\r\n  image: ExactAssetImage(${val}),\r\n  fit: BoxFit.${size},\r\n  repeat: ImageRepeat.${repeat},\r\n)`.trim();\r\n};\r\n\r\nexport default toDecorationImage;\r\n","import toFunit from \"./transform/unit\";\r\nimport toFColor from \"./transform/color\";\r\nimport toFBorder from \"./transform/border\";\r\nimport toBoxShadow from \"./transform/boxshadow\";\r\nimport toFTransform from \"./transform/transform\";\r\nimport toFFontWeight from \"./transform/font-weight\";\r\nimport toFFontFamily from \"./transform/font-family\";\r\nimport toConstraints from \"./transform/constraints\";\r\nimport toFBorderRadius from \"./transform/border-radius\";\r\nimport toAxisAlignment from \"./transform/axis-alignment\";\r\nimport toFMarginPadding from \"./transform/marginpadding\";\r\nimport toDecorationImage from \"./transform/background-image\";\r\nimport SPLIT_MAPPING from \"../css/split-mapping\";\r\nimport toCamel from \"../../utils/camel\";\r\n\r\nconst transform = (key, val, decls) => {\r\n  const result = { key: null, val };\r\n\r\n  switch (true) {\r\n    // background-image color ------------------------\r\n    case match(key, \"background-image\"):\r\n      result[\"key\"] = /^[a-zA-Z]+-gradient/gi.test(val) ? \"gradient\" : \"image\";\r\n      result[\"val\"] = toDecorationImage(val, decls);\r\n      break;\r\n\r\n    case match(key, \"background-color\", \"color\"):\r\n      result[\"val\"] = toFColor(val);\r\n      if (val === \"rgba(0, 0, 0, 0)\") {\r\n        result[\"key\"] = null;\r\n      } else {\r\n        result[\"key\"] = \"color\";\r\n      }\r\n\r\n      break;\r\n\r\n    // width & height ------------------------\r\n    case match(key, \"width\", \"height\"):\r\n      result[\"key\"] = key;\r\n      result[\"val\"] = toFunit(val);\r\n      break;\r\n\r\n    // left & right ------------------------\r\n    case match(key, \"top\", \"right\", \"left\", \"bottom\"):\r\n      result[\"key\"] = key;\r\n      result[\"val\"] = toFunit(val);\r\n      break;\r\n\r\n    // max-width & min-width ------------------------\r\n    case match(key, \"max-width\", \"min-width\"):\r\n    case match(key, \"max-height\", \"min-height\"):\r\n      result[\"key\"] = \"constraints\";\r\n      result[\"val\"] = toConstraints(val, decls);\r\n      break;\r\n\r\n    // text decoration style ------------------------\r\n    case match(key, \"text-decoration-line\"):\r\n      result[\"key\"] = \"decoration\";\r\n      result[\"val\"] = `TextDecoration.${toCamel(val)}`;\r\n      break;\r\n\r\n    case match(key, \"text-decoration-color\"):\r\n      result[\"key\"] = `decorationColor`;\r\n      result[\"val\"] = toFColor(val);\r\n      break;\r\n\r\n    case match(key, \"text-decoration-style\"):\r\n      result[\"key\"] = `decorationStyle`;\r\n      result[\"val\"] = `TextDecorationStyle.${val}`;\r\n      break;\r\n\r\n    case match(key, \"text-align\"):\r\n      result[\"val\"] = `TextAlign.${val}`;\r\n      break;\r\n\r\n    case match(key, \"font-style\"):\r\n      result[\"val\"] = `FontStyle.${val}`;\r\n      break;\r\n\r\n    case match(key, \"font-weight\"):\r\n      result[\"val\"] = toFFontWeight(val);\r\n      break;\r\n\r\n    case match(key, \"font-size\"):\r\n    case match(key, \"letter-spacing\"):\r\n      result[\"val\"] = toFunit(val);\r\n      break;\r\n\r\n    case match(key, \"font-family\"):\r\n      result[\"val\"] = toFFontFamily(val);\r\n      break;\r\n\r\n    // padding margin ------------------------\r\n    case match(key, \"padding\", \"margin\"):\r\n      const mainStyleKey = key.replace(/-[a-zA-Z]+$/, \"\");\r\n      result[\"key\"] = mainStyleKey;\r\n      result[\"val\"] = toFMarginPadding(mainStyleKey, val, decls);\r\n      break;\r\n\r\n    // align items ------------------------\r\n    case match(key, \"justify-content\"):\r\n      result[\"key\"] = \"mainAxisAlignment\";\r\n      result[\"val\"] = `MainAxisAlignment.${toAxisAlignment(val)}`;\r\n      break;\r\n\r\n    case match(key, \"align-items\"):\r\n      result[\"key\"] = \"crossAxisAlignment\";\r\n      result[\"val\"] = `CrossAxisAlignment.${toAxisAlignment(val)}`;\r\n      break;\r\n\r\n    // transform ------------------------\r\n    case match(key, \"transform\"):\r\n      result[\"key\"] = \"transform\";\r\n      result[\"val\"] = toFTransform(val);\r\n      break;\r\n\r\n    // border related ------------------------\r\n    case match(key, \"border-radius\"):\r\n      result[\"val\"] = toFBorderRadius(val, decls);\r\n      result[\"key\"] =\r\n        result[\"val\"] === \"BoxShape.circle\" ? \"shape\" : \"borderRadius\";\r\n      break;\r\n\r\n    case match(key, \"border\"):\r\n      result[\"key\"] = \"border\";\r\n      result[\"val\"] = toFBorder(val, decls);\r\n      break;\r\n\r\n    // box-shadow ------------------------\r\n    case match(key, \"box-shadow\"):\r\n      result[\"key\"] = \"boxShadow\";\r\n      result[\"val\"] = toBoxShadow(val);\r\n      break;\r\n\r\n    // opacity ------------------------\r\n    case match(key, \"opacity\"):\r\n      result[\"key\"] = key;\r\n      result[\"val\"] = val;\r\n      break;\r\n\r\n    default:\r\n      // Didn't match any test\r\n      break;\r\n  }\r\n\r\n  // to camel key\r\n  const camelKey = transfromToCamelKey(key);\r\n  if (camelKey) result[\"key\"] = camelKey;\r\n\r\n  return result;\r\n};\r\n\r\n/////////////////////////////////////////////////////////\r\n//\r\n//\tmatch key\r\n//\r\n/////////////////////////////////////////////////////////\r\nconst match = (key, ...rest) => {\r\n  for (let i = 0; i < rest.length; i++) {\r\n    if (key === rest[i]) return true;\r\n    if (inSplitStyles(key, rest[i])) return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nconst inSplitStyles = (key, sign) => {\r\n  const subStyles = SPLIT_MAPPING[sign];\r\n  if (!subStyles) return null;\r\n\r\n  for (let i = 0; i < subStyles.length; i++) {\r\n    if (key === subStyles[i]) return sign;\r\n  }\r\n  return null;\r\n};\r\n\r\n/////////////////////////////////////////////////////////\r\n//\r\n//\ttransfrom camel key\r\n//\r\n/////////////////////////////////////////////////////////\r\nconst transfromToCamelKey = (key) => {\r\n  if (key === \"letter-spacing\") {\r\n    return toCamel(key);\r\n  }\r\n\r\n  if (/^text-decoration.*/gi.test(key)) {\r\n    return null;\r\n  }\r\n\r\n  if (/^font-[a-zA-Z]+/gi.test(key) || /^text-[a-zA-Z]+/gi.test(key)) {\r\n    return toCamel(key);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default transform;\r\n","import ppo from \"ppo\";\r\nimport CodeArr from \"./code-arr\";\r\nimport transform from \"./transform\";\r\nimport {\r\n  CONTAINER,\r\n  TEXT,\r\n  CHILDREN,\r\n  TAB,\r\n  ROW,\r\n  COLUMN,\r\n  CLASS,\r\n  PROP,\r\n  PROP2,\r\n  DECO,\r\n  OPACITY,\r\n  POSITIONED,\r\n  TRANSFORM,\r\n  REAL_SPACE,\r\n  CENTER\r\n} from \"./template\";\r\n\r\nclass Widget {\r\n  constructor(type) {\r\n    this.children = [];\r\n    this.type = type;\r\n    this.decls = null;\r\n    this.parent = null;\r\n    this.id = ppo.uuid();\r\n\r\n    switch (type) {\r\n      case \"container\":\r\n        this.template = CONTAINER;\r\n        break;\r\n\r\n      case \"position\":\r\n        this.template = POSITIONED;\r\n        break;\r\n\r\n      case \"transform\":\r\n        this.template = TRANSFORM;\r\n        break;\r\n\r\n      case \"opacity\":\r\n        this.template = OPACITY;\r\n        break;\r\n\r\n      case \"text\":\r\n        this.template = TEXT;\r\n        break;\r\n\r\n      case \"center\":\r\n        this.template = CENTER;\r\n        break;\r\n\r\n      case \"row\":\r\n        this.template = ROW;\r\n        break;\r\n\r\n      case \"column\":\r\n        this.template = COLUMN;\r\n        break;\r\n\r\n      default:\r\n        this.template = CONTAINER;\r\n    }\r\n\r\n    this.codeString = \"\";\r\n    this.prop = new CodeArr();\r\n    this.prop2 = new CodeArr();\r\n    this.decoration = new CodeArr();\r\n    this.codelines = new CodeArr(this.template.split(/\\n/g));\r\n  }\r\n\r\n  addChild(child) {\r\n    if (this.children.indexOf(child) < 0) {\r\n      this.children.push(child);\r\n      child.parent = this;\r\n    }\r\n  }\r\n\r\n  addChildTo(parent) {\r\n    if (this.parent === parent) return;\r\n\r\n    const loop = target => {\r\n      if (!target.parent) {\r\n        parent.addChild(target);\r\n      } else {\r\n        loop(target.parent);\r\n      }\r\n    };\r\n\r\n    this.root = parent;\r\n    loop(this);\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root || this;\r\n  }\r\n\r\n  getDepth() {\r\n    let depth = 0;\r\n    const loop = target => {\r\n      if (target.parent) {\r\n        depth++;\r\n        loop(target.parent);\r\n      }\r\n    };\r\n    loop(this);\r\n\r\n    return depth;\r\n  }\r\n\r\n  /// set prop --------------------------------\r\n  setProp(okey, oval) {\r\n    let { key, val } = transform(okey, oval, this.decls);\r\n    if (!key) return;\r\n\r\n    const code =\r\n      this.type === \"text\" ? `    ${key}: ${val},` : `${key}: ${val},`;\r\n    this.prop.add(key, code);\r\n  }\r\n\r\n  /// set prop2 --------------------------------\r\n  setProp2(okey, oval) {\r\n    let { key, val } = transform(okey, oval, this.decls);\r\n    if (!key) return;\r\n    const code = this.type === \"text\" ? `  ${key}: ${val},` : `${key}: ${val},`;\r\n    this.prop2.add(key, code);\r\n  }\r\n\r\n  /// set Decoration --------------------------------\r\n  setDecoration(okey, oval) {\r\n    let { key, val } = transform(okey, oval, this.decls);\r\n    if (!key) return;\r\n\r\n    const code = `${key}: ${val},`;\r\n    this.decoration.add(key, code);\r\n  }\r\n\r\n  clearAllPseudoTags() {\r\n    this.codeString = this.codeString\r\n      .replace(new RegExp(CHILDREN, \"g\"), \"\")\r\n      .replace(new RegExp(CLASS, \"g\"), \"\")\r\n      .replace(new RegExp(PROP, \"g\"), \"\")\r\n      .replace(new RegExp(PROP2, \"g\"), \"\")\r\n      .replace(new RegExp(DECO, \"g\"), \"\")\r\n      .replace(new RegExp(TAB, \"g\"), REAL_SPACE);\r\n  }\r\n\r\n  clearBlankLines() {\r\n    const codeArr = this.codeString.split(/\\n/g);\r\n    for (let i = codeArr.length - 1; i >= 0; i--) {\r\n      const line = codeArr[i].trim();\r\n      if (!line) codeArr.splice(i, 1);\r\n    }\r\n\r\n    this.codeString = codeArr.join(\"\\n\");\r\n  }\r\n\r\n  /// Convert various elements to CodeString ----------------------------\r\n  selfToCodeString() {\r\n    const depth = this.getDepth();\r\n    //const tabs = child.codelines.getTabs(depth);\r\n\r\n    this.codeString = this.codelines.toString(depth);\r\n  }\r\n\r\n  childToCodeString(child) {\r\n    const childStr = child.toString().trim();\r\n    this.replaceTag(CHILDREN, `  child: ${childStr}`);\r\n  }\r\n\r\n  propToCodeString() {\r\n    if (this.prop.isNull()) return;\r\n    const nspace = this.type === \"text\" ? 0 : 1;\r\n    this.replaceTag(PROP, this.prop.toString(nspace));\r\n  }\r\n\r\n  prop2ToCodeString() {\r\n    if (this.prop2.isNull()) return;\r\n    this.replaceTag(PROP2, this.prop2.toString(0));\r\n  }\r\n\r\n  decorationToCodeString() {\r\n    if (this.decoration.isNull()) return;\r\n\r\n    let decoration = this.decoration.toString(2);\r\n    decoration = `  decoration: BoxDecoration(\r\n${decoration}\r\n  )`;\r\n\r\n    this.replaceTag(DECO, decoration);\r\n  }\r\n\r\n  replaceTag(TAG, code) {\r\n    this.codelines.replaceTag(TAG, code);\r\n  }\r\n\r\n  toString() {\r\n    if (this.children.length > 0) {\r\n      if (this.children.length === 1) {\r\n        const child = this.children[0];\r\n        this.childToCodeString(child);\r\n      } else {\r\n        for (let i = 0; i < this.children; i++) {}\r\n      }\r\n    }\r\n\r\n    // merge code string\r\n    this.propToCodeString();\r\n    this.prop2ToCodeString();\r\n    this.decorationToCodeString();\r\n    this.selfToCodeString();\r\n    this.clearAllPseudoTags();\r\n    this.clearBlankLines();\r\n\r\n    return this.codeString || \"\";\r\n  }\r\n}\r\n\r\nclass WidgetManager {\r\n  constructor() {\r\n    this.cache = {};\r\n  }\r\n\r\n  get({ type, target }) {\r\n    const { cache } = this;\r\n    const key = `_${target}.${type}`;\r\n    if (!cache[key]) cache[key] = new Widget(type);\r\n    return cache[key];\r\n  }\r\n}\r\n\r\nexport { Widget, WidgetManager };\r\n","/////////////////////////////////////////////////////////\r\n//\r\n//\tFilter Func\r\n//\r\n/////////////////////////////////////////////////////////\r\nconst isText = key => {\r\n  if (key.indexOf(\"font\") === 0) {\r\n    return true;\r\n  } else if (key.indexOf(\"text-\") === 0) {\r\n    return true;\r\n  } else if (key === \"color\" || key === \"letter-spacing\") {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst isDecoration = key => {\r\n  if (\r\n    key === \"background-image\" ||\r\n    key === \"background-color\" ||\r\n    key === \"border\" ||\r\n    key === \"box-shadow\"\r\n  ) {\r\n    return true;\r\n  } else if (key.indexOf(\"border\") >= 0) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst isPositioned = ({ key, val, decls }) => {\r\n  const position = decls.getVal(\"position\");\r\n  const hasPosition = position === \"absolute\" || position === \"fixed\";\r\n\r\n  const isTLRBAttr =\r\n    hasPosition &&\r\n    (key === \"top\" || key === \"left\" || key === \"right\" || key === \"bottom\");\r\n  const isPositionAttr =\r\n    key === \"position\" && (val === \"absolute\" || val === \"fixed\");\r\n\r\n  if (isTLRBAttr || isPositionAttr) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst isOpacity = ({ key, val, decls }) => {\r\n  if (key === \"opacity\") return true;\r\n  return false;\r\n};\r\n\r\nconst isFlex = ({ key, val, decls }) => {\r\n  if (/^flex/.test(key)) return true;\r\n  if (key === \"display\" && /flex/gi.test(val)) return true;\r\n  if (key === \"justify-content\" || key === \"align-items\") return true;\r\n  return false;\r\n};\r\n\r\nconst isCenter = ({ key, val, decls }) => {\r\n  if (isFlex({ key, val, decls })) {\r\n    const alignItems = decls.getVal(\"align-items\");\r\n    const justifyContent = decls.getVal(\"justify-content\");\r\n    if (alignItems === \"center\" && justifyContent === \"center\") return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst isRow = ({ key, val, decls }) => {\r\n  if (isFlex({ key, val, decls })) {\r\n    const direction = decls.getVal(\"flex-direction\", \"row\");\r\n    if (direction === \"row\") return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst isColumn = ({ key, val, decls }) => {\r\n  if (isFlex({ key, val, decls })) {\r\n    const direction = decls.getVal(\"flex-direction\", \"row\");\r\n    if (direction === \"column\") return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst isTransform = ({ key, val, decls }) => {\r\n  if (key && /transform$/gi.test(key)) return true;\r\n  return false;\r\n};\r\n\r\nexport {\r\n  isText,\r\n  isDecoration,\r\n  isPositioned,\r\n  isOpacity,\r\n  isTransform,\r\n  isFlex,\r\n  isColumn,\r\n  isCenter,\r\n  isRow\r\n};\r\n","import { Widget, WidgetManager } from \"./widget\";\r\nimport {\r\n  isRow,\r\n  isCenter,\r\n  isColumn,\r\n  isText,\r\n  isDecoration,\r\n  isPositioned,\r\n  isOpacity,\r\n  isTransform\r\n} from \"./filter\";\r\n\r\nconst parseFlutter = decls => {\r\n  if (!decls || decls.isNull()) return \"\";\r\n\r\n  let widget = new Widget(\"container\");\r\n  widget.decls = decls;\r\n  const widgetManager = new WidgetManager();\r\n\r\n  decls.forEach((decl, index) => {\r\n    let key = decl[\"key\"];\r\n    let val = decl[\"val\"];\r\n\r\n    /// parent widget ---------------------------------------------\r\n    // Positioned\r\n    if (isPositioned({ key, val, decls })) {\r\n      const parent = widgetManager.get({ target: \"parent\", type: \"position\" });\r\n      parent.setProp(key, val);\r\n      widget.addChildTo(parent);\r\n    }\r\n\r\n    // Opacity\r\n    else if (isOpacity({ key, val, decls })) {\r\n      const parent = widgetManager.get({ target: \"parent\", type: \"opacity\" });\r\n      parent.setProp(key, val);\r\n      widget.addChildTo(parent);\r\n    }\r\n\r\n    // Flex isCenter\r\n    else if (isCenter({ key, val, decls })) {\r\n      const parent = widgetManager.get({ target: \"parent\", type: \"center\" });\r\n      parent.setProp(key, val);\r\n      widget.addChildTo(parent);\r\n    }\r\n\r\n    // Flex Row\r\n    else if (isRow({ key, val, decls })) {\r\n      const parent = widgetManager.get({ target: \"parent\", type: \"row\" });\r\n      parent.setProp(key, val);\r\n      widget.addChildTo(parent);\r\n    }\r\n\r\n    // Flex Column\r\n    else if (isColumn({ key, val, decls })) {\r\n      const parent = widgetManager.get({ target: \"parent\", type: \"column\" });\r\n      parent.setProp(key, val);\r\n      widget.addChildTo(parent);\r\n    }\r\n\r\n    // Transform\r\n    else if (isTransform({ key, val, decls })) {\r\n      const parent = widgetManager.get({ target: \"parent\", type: \"transform\" });\r\n      parent.setProp(key, val);\r\n      widget.addChildTo(parent);\r\n    }\r\n\r\n    /// child widget ---------------------------------------------\r\n    // text\r\n    else if (isText(key)) {\r\n      const child = widgetManager.get({ target: \"child\", type: \"text\" });\r\n      const keys = [\"text-align\"];\r\n      if (keys.indexOf(key) > -1) {\r\n        child.setProp2(key, val);\r\n      } else {\r\n        child.setProp(key, val);\r\n      }\r\n      widget.addChild(child);\r\n    }\r\n\r\n    /// self widget ---------------------------------------------\r\n    // decoration\r\n    else if (isDecoration(key)) {\r\n      widget.setDecoration(key, val);\r\n    }\r\n\r\n    // prop\r\n    else {\r\n      widget.setProp(key, val);\r\n    }\r\n  });\r\n\r\n  return widget.getRoot().toString();\r\n};\r\n\r\nexport default parseFlutter;\r\n","import postcss from \"postcss\";\r\nimport Message from \"../message/message\";\r\nimport parseCssDecls from \"./css/parse\";\r\nimport parseFlutter from \"./flutter/parse\";\r\n\r\nfunction adjustColorCode(inputString) {\r\n  // Regular expression to find \"Color(0x????????)\" where ???? can be any hexadecimal digits\r\n  const regex = /Color\\(0x([0-9A-Fa-f]{8})\\)/g;\r\n\r\n  // Replace the found color codes\r\n  return inputString.replace(regex, function (match, p1) {\r\n    // Add 'FF' after '0x' and remove the last two digits\r\n    return `Color(0xFF${p1.slice(0, 6)})`;\r\n  });\r\n}\r\n\r\nconst convert2Flutter = async css => {\r\n\r\n\r\n  try {\r\n    const ast = await postcss([\r\n      require(\"postcss-transform-shortcut\")({})\r\n      // require(\"postcss-short-border-radius\")()\r\n    ]).process(css);\r\n\r\n    const decls = await parseCssDecls(ast.root);\r\n    const flutterStyle = parseFlutter(decls);\r\n\r\n    if (flutterStyle !== \"\") Message.success(\"Has been converted successfully!\");\r\n\r\n    return adjustColorCode(flutterStyle);\r\n    \r\n  } catch (err) {\r\n    const msg = dumpLogError(err);\r\n    Message.error(msg);\r\n\r\n    return \"\";\r\n  }\r\n};\r\n\r\nconst dumpLogError = err => {\r\n  let msg;\r\n  if (typeof err === \"object\") {\r\n    if (err.message) {\r\n      msg = \"C2F - Message: \" + err.message;\r\n      console.log(`\\n ${msg}`);\r\n    }\r\n    if (err.stack) {\r\n      msg = msg || \"C2F - Convert css 2 flutter error !\";\r\n      console.log(\"\\nC2F - Stacktrace:\");\r\n      console.log(\"====================\");\r\n      console.log(err.stack);\r\n    }\r\n  } else {\r\n    msg = \"C2F - Convert css 2 flutter error !\";\r\n    console.log(\"C2F - dumpError :: argument is not an object\");\r\n  }\r\n\r\n  return msg;\r\n};\r\n\r\nexport default convert2Flutter;\r\n","import React from \"react\";\r\nimport Coder from \"./coder\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport ResultAlert from \"./result-alert\";\r\nimport Message from \"../service/message/message\";\r\nimport convert2Flutter from \"../service/convert/converter\";\r\n\r\nclass OperatingArea extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.cssOptions = {\r\n      mode: \"css\"\r\n      //theme: 'monokai'\r\n    };\r\n\r\n    this.dartOptions = {\r\n      mode: \"dart\"\r\n    };\r\n\r\n    this.cssVal = \"\";\r\n    this.dartVal = \"\";\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.cssVal = `\r\nbackground-color: #e0e0e0;\r\nwidth: 320px;\r\nheight: 240px;\r\nborder:5px solid red;\r\nfont: 900 24px Georgia;\r\npadding: 2px 10px;\r\nmargin: 3px;\r\nborder-radius: 10px;\r\ntext-decoration: underline wavy red;\r\n    `.trim();\r\n\r\n    await this.convertAndUpdateDartCoder();\r\n  }\r\n\r\n  clearBtnClickHandler(e) {\r\n    this.updateCoder({ cssVal: \"\", dartVal: \"\" });\r\n    Message.success(\"Cleared successfully\");\r\n  }\r\n\r\n  async convertBtnClickHandler(e) {\r\n    await this.convertAndUpdateDartCoder();\r\n  }\r\n\r\n  codeChangeHadler(value) {\r\n    this.cssVal = value;\r\n  }\r\n\r\n  async convertAndUpdateDartCoder() {\r\n    const dartVal = await convert2Flutter(this.cssVal);\r\n    this.updateCoder({ dartVal });\r\n  }\r\n\r\n  updateCoder({ cssVal, dartVal }) {\r\n    if (dartVal !== undefined && dartVal !== null) this.dartVal = dartVal;\r\n    if (cssVal !== undefined && cssVal !== null) this.cssVal = cssVal;\r\n\r\n    this.setState({});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <ResultAlert />\r\n        <Row>\r\n          <Col span={12} className=\"coder-con\">\r\n            <div className=\"coder-title\">Css</div>\r\n            <Coder\r\n              options={this.cssOptions}\r\n              value={this.cssVal}\r\n              onChange={this.codeChangeHadler.bind(this)}\r\n            />\r\n          </Col>\r\n\r\n          <Col span={12} className=\"coder-con\">\r\n            <div className=\"coder-title\">Flutter</div>\r\n            <Coder options={this.dartOptions} value={this.dartVal} />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"btns\">\r\n          <Button type=\"danger\" onClick={this.clearBtnClickHandler.bind(this)}>\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.convertBtnClickHandler.bind(this)}\r\n          >\r\n            Convert\r\n          </Button>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OperatingArea;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Logo from \"./components/logo\";\r\nimport OperatingArea from \"./components/operating-area\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst { Content } = Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout>\r\n        <Content>\r\n          <Logo />\r\n          <OperatingArea />\r\n          <div id=\"avator\"></div>\r\n        </Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.register();\r\n"],"sourceRoot":""}